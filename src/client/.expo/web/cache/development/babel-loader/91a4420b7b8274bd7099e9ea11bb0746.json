{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/client/Screens/Profile/EditPost.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport EditStyle from \"./style/EditStyle\";\nimport { connect } from \"react-redux\";\nvar styles = StyleSheet.create(_objectSpread({}, EditStyle));\nimport axios from \"axios\";\nimport { modifypost as _modifypost } from \"../../actions/postsActions\";\nimport { baseURL } from \"../../constants\";\n\nfunction EditPost(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Description = _useState2[0],\n      putDescription = _useState2[1];\n\n  var didMountRef = useRef(false);\n  useEffect(function () {\n    putDescription(props.postdata.description);\n\n    if (didMountRef.current) {\n      if (props.isModified) {\n        Alert.alert('Post has been updated!');\n        props.navigation.navigate(\"Profile\");\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isModified]);\n\n  var ModifyPost = function ModifyPost() {\n    var data = {\n      urlpost: props.postdata.urlpost,\n      userid: props.postdata.userid,\n      postid: props.postdata.Id,\n      description: Description\n    };\n    props.modifypost(data);\n  };\n\n  var DeletePost = function DeletePost() {\n    return _regeneratorRuntime.async(function DeletePost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = axios;\n            _context.t1 = baseURL;\n            _context.t2 = {\n              userid: props.postdata.userid,\n              postid: props.postdata.Id\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 5:\n            _context.t3 = _context.sent;\n            _context.t4 = {\n              \"auth-token\": _context.t3\n            };\n            _context.t5 = {\n              method: \"post\",\n              url: \"/DeletePost\",\n              baseURL: _context.t1,\n              data: _context.t2,\n              headers: _context.t4\n            };\n            (0, _context.t0)(_context.t5).then(function (res) {\n              var message = res.data.message;\n\n              if (res.data.value) {\n                props.navigation.navigate(\"Profile\");\n              }\n            }).catch(function (err) {\n              return console.log(err);\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      marginTop: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.userRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.userImage,\n    source: {\n      uri: props.postdata.urlpost\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.item1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Caption\")), React.createElement(View, {\n    regular: true,\n    style: styles.item2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.TextInput,\n    value: Description,\n    onChangeText: function onChangeText(text) {\n      return putDescription(text);\n    },\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: {\n      marginTop: 120\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      height: 50,\n      width: 120,\n      backgroundColor: \"#48bfe3\",\n      borderRadius: SIZES.radius / 0.2,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    onPress: ModifyPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.white\n    }, FONTS.h3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Modify Post\"))), React.createElement(TouchableOpacity, {\n    style: {\n      height: 50,\n      width: 120,\n      backgroundColor: \"#48bfe3\",\n      borderRadius: SIZES.radius / 0.2,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    onPress: DeletePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.white\n    }, FONTS.h3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Delete Post\")))));\n}\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    isModified: state.postsReducer.isModified,\n    postdata: state.postsReducer.postdata\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    modifypost: function modifypost(data) {\n      return dispatch(_modifypost(data));\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(EditPost);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/client/Screens/Profile/EditPost.js"],"names":["React","useState","useRef","useEffect","COLORS","SIZES","FONTS","AsyncStorage","EditStyle","connect","styles","StyleSheet","create","axios","modifypost","baseURL","EditPost","props","Description","putDescription","didMountRef","postdata","description","current","isModified","Alert","alert","navigation","navigate","ModifyPost","data","urlpost","userid","postid","Id","DeletePost","getItem","method","url","headers","then","res","message","value","catch","err","console","log","marginTop","userRow","userImage","uri","container","item1","fontSize","fontWeight","item2","TextInput","text","marginBottom","height","width","backgroundColor","borderRadius","radius","alignItems","justifyContent","color","white","h3","mapStatetoProps","state","postsReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\n\nimport {\n  TouchableOpacity,\n  View,\n  Text,\n  Image,\n  Button,\n  TextInput,\n  StyleSheet,\n  Alert,\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nimport EditStyle from \"./style/EditStyle\";\nimport { connect } from \"react-redux\";\nconst styles = StyleSheet.create({ ...EditStyle });\nimport axios from \"axios\";\nimport { modifypost } from \"../../actions/postsActions\";\nimport { baseURL } from \"../../constants\";\n\nfunction EditPost(props) {\n  const [Description, putDescription] = useState(\"\");\n\n  /*static navigationOptions = {\n\n    tabBarIcon: ({ tintColor }) => (\n      <Icon name=\"ios-pencil\" style={{ color: tintColor }} />\n    )\n  }*/\n\n  const didMountRef = useRef(false);\n  // useEffect()to check if states have changed\n  // 2nd argument is the list of states you want to watch for\n  useEffect(() => {\n    putDescription(props.postdata.description);\n    if (didMountRef.current) {\n      // if login success, go to home screen\n      if (props.isModified) {\n        Alert.alert('Post has been updated!')\n        props.navigation.navigate(\"Profile\");\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isModified]);\n\n  const ModifyPost = () => {\n    const data = {\n      urlpost: props.postdata.urlpost,\n      userid: props.postdata.userid,\n      postid: props.postdata.Id,\n      description: Description,\n    };\n\n    // calling login() dispatch function\n    props.modifypost(data);\n  };\n\n  const DeletePost = async () => {\n    axios({\n      method: \"post\",\n      url: \"/DeletePost\",\n      baseURL: baseURL,\n      data: {\n        userid: props.postdata.userid,\n        postid: props.postdata.Id,\n      },\n      headers: {\n        \"auth-token\": await AsyncStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => {\n        const message = res.data.message;\n\n        if (res.data.value) {\n          props.navigation.navigate(\"Profile\");\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <View style={{ marginTop: 100 }}>\n      <View style={styles.userRow}>\n        <Image\n          style={styles.userImage}\n          source={{ uri: props.postdata.urlpost }}\n        />\n\n        <View style={styles.container}>\n          <View style={styles.item1}>\n            <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>Caption</Text>\n          </View>\n          <View regular style={styles.item2}>\n            <TextInput\n              style={styles.TextInput}\n              value={Description}\n              onChangeText={(text) => putDescription(text)}\n              autoCapitalize=\"none\"\n            />\n          </View>\n        </View>\n        <View style={{ marginTop: 120 }}>\n          <View style={{ marginBottom: 10 }}>\n            <TouchableOpacity\n              style={{\n                height: 50,\n                width: 120,\n                backgroundColor: \"#48bfe3\",\n                borderRadius: SIZES.radius / 0.2,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n              onPress={ModifyPost}\n            >\n              <Text style={{ color: COLORS.white, ...FONTS.h3 }}>\n                Modify Post\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 120,\n              backgroundColor: \"#48bfe3\",\n              borderRadius: SIZES.radius / 0.2,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={DeletePost}\n          >\n            <Text style={{ color: COLORS.white, ...FONTS.h3 }}>\n              Delete Post\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n}\nconst mapStatetoProps = (state) => {\n  return {\n    isModified: state.postsReducer.isModified,\n    postdata: state.postsReducer.postdata,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // only map needed dispatches here\n    modifypost: (data) => dispatch(modifypost(data)),\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(EditPost);\n"]},"metadata":{},"sourceType":"module"}