{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/client/Screens/Profile/EditProfile.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport EditStyle from \"./style/EditProfileStyle\";\nimport { connect } from \"react-redux\";\nvar styles = StyleSheet.create(_objectSpread({}, EditStyle));\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { uploadprofilephoto as _uploadprofilephoto } from \"../../actions/postsActions\";\nimport { baseURL } from \"../../constants\";\nimport { Icon } from \"native-base\";\n\nvar EditProfile = function (_Component) {\n  _inherits(EditProfile, _Component);\n\n  var _super = _createSuper(EditProfile);\n\n  function EditProfile(props) {\n    var _this;\n\n    _classCallCheck(this, EditProfile);\n\n    _this = _super.call(this, props);\n\n    _this.UploadProfilePhoto = function () {\n      var Data = {\n        id: _this.props.userDetails,\n        url: _this.state.url\n      };\n\n      _this.props.uploadprofilephoto(Data);\n    };\n\n    _this.saveEditProfile = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.state.name) {\n                _context.next = 4;\n                break;\n              }\n\n              Alert.alert(\"Name is empty\");\n              _context.next = 17;\n              break;\n\n            case 4:\n              if (_this.state.username) {\n                _context.next = 8;\n                break;\n              }\n\n              Alert.alert(\"Username is empty\");\n              _context.next = 17;\n              break;\n\n            case 8:\n              _context.t0 = axios;\n              _context.t1 = baseURL;\n              _context.t2 = {\n                userid: _this.props.userDetails,\n                name: _this.state.name,\n                username: _this.state.username,\n                website: _this.state.website,\n                bio: _this.state.bio\n              };\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n            case 13:\n              _context.t3 = _context.sent;\n              _context.t4 = {\n                \"auth-token\": _context.t3\n              };\n              _context.t5 = {\n                method: \"post\",\n                url: \"/EditProfile\",\n                baseURL: _context.t1,\n                data: _context.t2,\n                headers: _context.t4\n              };\n              (0, _context.t0)(_context.t5).then(function (res) {\n                Alert.alert(\"Data is saved\");\n                var message = res.data.message;\n\n                if (message === \"Profile updated succefully\") {\n                  _this.props.navigation.navigate(\"Profile\");\n\n                  Alert.alert(message);\n                }\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.fetchUserDetails = function _callee2(user_id) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = axios;\n              _context2.t1 = baseURL;\n              _context2.t2 = {\n                userid: user_id\n              };\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n            case 5:\n              _context2.t3 = _context2.sent;\n              _context2.t4 = {\n                \"auth-token\": _context2.t3\n              };\n              _context2.t5 = {\n                method: \"post\",\n                url: \"/getUserDetails\",\n                baseURL: _context2.t1,\n                data: _context2.t2,\n                headers: _context2.t4\n              };\n              (0, _context2.t0)(_context2.t5).then(function (res) {\n                _this.setState({\n                  name: res.data.results[0].name\n                });\n\n                _this.setState({\n                  username: res.data.results[0].username\n                });\n\n                _this.setState({\n                  bio: res.data.results[0].bio\n                });\n\n                _this.setState({\n                  website: res.data.results[0].website\n                });\n\n                _this.setState({\n                  url: res.data.results[0].url\n                });\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.ChangePhoto = function () {};\n\n    _this.state = {\n      name: \"\",\n      username: \"\",\n      website: \"\",\n      bio: \"\",\n      url: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(EditProfile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchUserDetails(this.props.userDetails);\n      this.willFocusSubscription = this.props.navigation.addListener(\"willFocus\", function () {\n        _this2.fetchUserDetails(_this2.props.userDetails);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.willFocusSubscription.remove();\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton(text, onPress) {\n      return React.createElement(View, {\n        style: {\n          margin: SIZES.padding * 0.5,\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          height: 60,\n          width: 200,\n          backgroundColor: COLORS.black,\n          borderRadius: SIZES.radius / 0.2,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginBottom: 200,\n          marginTop: 50\n        },\n        onPress: onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({\n          color: COLORS.white\n        }, FONTS.h3),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      }, text)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.headerContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.userRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: styles.userImage,\n        source: {\n          uri: this.state.url\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: styles.changephoto,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.item1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }, \"Name\")), React.createElement(View, {\n        regular: true,\n        style: styles.item2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TextInput,\n        value: this.state.name,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            name: text\n          });\n        },\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.item1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 19\n        }\n      }, \"Username\")), React.createElement(View, {\n        regular: true,\n        style: styles.item2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TextInput,\n        value: this.state.username,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            username: text\n          });\n        },\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.item1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }\n      }, \"Bio\")), React.createElement(View, {\n        regular: true,\n        style: styles.item2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TextInput,\n        value: this.state.bio,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            bio: text\n          });\n        },\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }\n      }))), this.renderButton(\"Save\", this.saveEditProfile)))));\n    }\n  }]);\n\n  return EditProfile;\n}(Component);\n\nEditProfile.navigationOptions = {\n  tabBarIcon: function tabBarIcon(_ref) {\n    var tintColor = _ref.tintColor;\n    return React.createElement(Icon, {\n      name: \"ios-pencil\",\n      style: {\n        color: tintColor\n      },\n      __self: EditProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    });\n  }\n};\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    userDetails: state.loginReducer.userDetails\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    uploadprofilephoto: function uploadprofilephoto(Data) {\n      return dispatch(_uploadprofilephoto(Data));\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(EditProfile);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/client/Screens/Profile/EditProfile.js"],"names":["React","Component","COLORS","SIZES","FONTS","EditStyle","connect","styles","StyleSheet","create","axios","AsyncStorage","uploadprofilephoto","baseURL","Icon","EditProfile","props","UploadProfilePhoto","Data","id","userDetails","url","state","saveEditProfile","name","Alert","alert","username","userid","website","bio","getItem","method","data","headers","then","res","message","navigation","navigate","catch","err","console","log","fetchUserDetails","user_id","setState","results","ChangePhoto","willFocusSubscription","addListener","remove","text","onPress","margin","padding","alignItems","height","width","backgroundColor","black","borderRadius","radius","justifyContent","marginBottom","marginTop","color","white","h3","headerContainer","userRow","userImage","uri","changephoto","container","item1","fontSize","fontWeight","item2","TextInput","renderButton","navigationOptions","tabBarIcon","tintColor","mapStatetoProps","loginReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\n\nimport {\n  KeyboardAvoidingView,\n  View,\n  Text,\n  Image,\n  Button,\n  TextInput,\n  StyleSheet,\n  Alert,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\n\nimport EditStyle from \"./style/EditProfileStyle\";\nimport { connect } from \"react-redux\";\nconst styles = StyleSheet.create({ ...EditStyle });\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { uploadprofilephoto } from \"../../actions/postsActions\";\nimport { baseURL } from \"../../constants\";\n\nimport { Icon } from \"native-base\";\n\nclass EditProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      username: \"\",\n      website: \"\",\n      bio: \"\",\n      url: \"\",\n    };\n  }\n\n  static navigationOptions = {\n    tabBarIcon: ({ tintColor }) => (\n      <Icon name=\"ios-pencil\" style={{ color: tintColor }} />\n    ),\n  };\n\n  UploadProfilePhoto = () => {\n    const Data = {\n      id: this.props.userDetails,\n      url: this.state.url,\n    };\n    // calling signup() dispatch\n\n    this.props.uploadprofilephoto(Data);\n  };\n\n  saveEditProfile = async () => {\n    if (!this.state.name) {\n      Alert.alert(\"Name is empty\");\n    } else if (!this.state.username) {\n      Alert.alert(\"Username is empty\");\n    } else {\n      axios({\n        method: \"post\",\n        url: \"/EditProfile\",\n        baseURL: baseURL,\n        data: {\n          userid: this.props.userDetails,\n          name: this.state.name,\n          username: this.state.username,\n          website: this.state.website,\n          bio: this.state.bio,\n        },\n        headers: {\n          \"auth-token\": await AsyncStorage.getItem(\"token\"),\n        },\n      })\n        .then((res) => {\n          Alert.alert(\"Data is saved\");\n          const message = res.data.message;\n\n          if (message === \"Profile updated succefully\") {\n            this.props.navigation.navigate(\"Profile\");\n            Alert.alert(message);\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  fetchUserDetails = async (user_id) => {\n    axios({\n      method: \"post\",\n      url: \"/getUserDetails\",\n      baseURL: baseURL,\n      data: {\n        userid: user_id,\n      },\n      headers: {\n        \"auth-token\": await AsyncStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => {\n        this.setState({ name: res.data.results[0].name });\n        this.setState({ username: res.data.results[0].username });\n        this.setState({ bio: res.data.results[0].bio });\n        this.setState({ website: res.data.results[0].website });\n        this.setState({ url: res.data.results[0].url });\n      })\n      .catch((err) => console.log(err));\n  };\n  /*async ComponentDidMount () {\n     \n  \n    AsyncStorage.getItem('name').then((value)=> this.setState({'name':value}));\n   \n    AsyncStorage.getItem('username').then((value)=> this.setState({'username':value}));\n    AsyncStorage.getItem('website').then((value)=> this.setState({'website':value}));\n    AsyncStorage.getItem('bio').then((value)=> this.setState({'bio':value}));\n\n}*/\n\n  componentDidMount() {\n    this.fetchUserDetails(this.props.userDetails);\n    this.willFocusSubscription = this.props.navigation.addListener(\n      \"willFocus\",\n      () => {\n        this.fetchUserDetails(this.props.userDetails);\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    this.willFocusSubscription.remove();\n  }\n\n  renderButton(text, onPress) {\n    return (\n      <View style={{ margin: SIZES.padding * 0.5, alignItems: \"center\" }}>\n        <TouchableOpacity\n          style={{\n            height: 60,\n            width: 200,\n            backgroundColor: COLORS.black,\n            borderRadius: SIZES.radius / 0.2,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: 200,\n            marginTop: 50,\n          }}\n          onPress={onPress}\n        >\n          <Text style={{ color: COLORS.white, ...FONTS.h3 }}>{text}</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  ChangePhoto = () => {};\n\n  render() {\n    return (\n      <KeyboardAvoidingView>\n        <ScrollView>\n          <View style={styles.headerContainer}>\n            <View style={styles.userRow}>\n              <Image\n                style={styles.userImage}\n                source={{ uri: this.state.url }}\n              />\n              <View style={styles.changephoto}></View>\n\n              <View style={styles.container}>\n                <View style={styles.item1}>\n                  <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>Name</Text>\n                </View>\n                <View regular style={styles.item2}>\n                  <TextInput\n                    style={styles.TextInput}\n                    value={this.state.name}\n                    onChangeText={(text) => this.setState({ name: text })}\n                    autoCapitalize=\"none\"\n                  />\n                </View>\n\n                <View style={styles.item1}>\n                  <Text style={{ fontSize: 18, fontWeight: \"bold\" }}>\n                    Username\n                  </Text>\n                </View>\n                <View regular style={styles.item2}>\n                  <TextInput\n                    style={styles.TextInput}\n                    value={this.state.username}\n                    onChangeText={(text) => this.setState({ username: text })}\n                    autoCapitalize=\"none\"\n                  />\n                </View>\n\n                <View style={styles.item1}>\n                  <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>Bio</Text>\n                </View>\n                <View regular style={styles.item2}>\n                  <TextInput\n                    style={styles.TextInput}\n                    value={this.state.bio}\n                    onChangeText={(text) => this.setState({ bio: text })}\n                    autoCapitalize=\"none\"\n                  />\n                </View>\n              </View>\n\n              {this.renderButton(\"Save\", this.saveEditProfile)}\n            </View>\n          </View>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    );\n  }\n}\nconst mapStatetoProps = (state) => {\n  return {\n    userDetails: state.loginReducer.userDetails,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // only map needed dispatches here\n    uploadprofilephoto: (Data) => dispatch(uploadprofilephoto(Data)),\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(EditProfile);\n"]},"metadata":{},"sourceType":"module"}